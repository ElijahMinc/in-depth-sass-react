@use "sass:meta";

*{
  margin: 10px;
}

// base mixin for sizes

// @mixin btn-size ($padding-left-right, $padding-top-bottom, $font-size: 12px){
  // padding: #{$padding-top-bottom + 'px'} #{$padding-left-right + 'px'} ;

  // & > .btn-title {
  //   font-size: $font-size;
  // }
// }



// length - функция sass, возвращающая размер листа4
// nth - функция, которая может получить доступ к элементам в списке
@mixin btn-size-2($selectors...) {
    @for $i from 0 to length($selectors){
      #{nth($selectors, $i + 1)}{
        
        $mui: ($i + 1)/2;

        padding: 6px * $mui 12px * $mui;

        & > .btn-title {
          font-size: 15px * $mui;
        }
    }
  }
  
}


@mixin button-types($args...) {
  @each $name, $color in meta.keywords($args){
    &-type-#{$name}{
      background-color: $color;
    }
  }

}

// @content

@mixin hover{
  &:not([disabled]):hover{
    @content('not-disabled');
  }
  &:hover{
    @content('disabled');
  }
}


.btn {
  outline: none;
  background-color: black;
  border: 1px solid transparent;
  color: white;
  cursor: pointer;
  border-radius: 5px;
  transition: .3s;


  @include hover using ($types){
    @if $types == 'not-disabled'{
      background-color: white;
      color: black;
      border: 1px solid black;
    }
    @if $types == 'disabled'{
      background-color: silver;
    }
  }
  // &:hover {
  //   background-color: white;
  //   color: black;
  //   border: 1px solid black;
  // }
  &:active {
    transform: translate(0, 2px);
  }

  @include btn-size-2('&.sm', '&.md', '&.lg');
  @include button-types($success: #080, $error: #800, $info: blue);


  // &.sm {
  //   @include btn-size(15, 5)
  // }
  // &.md {
  //   @include btn-size(20, 10)
  // }
  // &.lg {
  //   @include btn-size(25, 15)
  // }
}


// any numbers of args


// @mixin btn-size($selectors...){
//   @for $i from 0 to length($selectors){
//     #{nth()}{

//     }
//   }
// }


